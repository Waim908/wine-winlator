diff -urN proton10_wine/dlls/ntdll/unix/env.c b/dlls/ntdll/unix/env.c
--- proton10_wine/dlls/ntdll/unix/env.c	2025-10-26 19:03:17.856767806 +0800
+++ b/dlls/ntdll/unix/env.c	2025-10-26 21:37:31.251744936 +0800
@@ -1731,6 +1731,16 @@
     copy_unicode_string( &src, dst, str, wcslen(src) * sizeof(WCHAR) );
 }
 
+static inline void append_unicode_string( WCHAR *src, WCHAR **dst, UNICODE_STRING *str )
+{
+    UINT len = wcslen(src) * sizeof(WCHAR);
+    str->Length += len;
+    str->MaximumLength += len + sizeof(WCHAR);
+    memcpy( *dst, src, len );
+    (*dst)[len / sizeof(WCHAR)] = 0;
+    *dst += len / sizeof(WCHAR) + 1;
+}
+
 static inline WCHAR *get_dos_path( WCHAR *nt_path )
 {
     if (nt_path[4] && nt_path[5] == ':') return nt_path + 4; /* skip the \??\ prefix */
@@ -2076,10 +2086,11 @@
  */
 void init_startup_info(void)
 {
-    WCHAR *src, *dst, *env, *image;
+    WCHAR *src, *dst, *env, *extra_args;
+    char *wine_args;
     void *module = NULL;
     unsigned int status;
-    SIZE_T size, info_size, env_size, env_pos;
+    SIZE_T size, info_size, env_size, env_pos, extra_args_len;
     RTL_USER_PROCESS_PARAMETERS *params = NULL;
     struct startup_info_data *info;
     USHORT machine;
@@ -2110,12 +2121,25 @@
     add_dynamic_environment( &env, &env_pos, &env_size );
     is_prefix_bootstrap = !!find_env_var( env, env_pos, bootstrapW, ARRAY_SIZE(bootstrapW) );
     env[env_pos++] = 0;
+    extra_args = NULL;
+    
+    extra_args_len = 0;
+    wine_args = getenv( "WINEARGS" );
+    if (wine_args)
+    {
+        SIZE_T len = strlen(wine_args) + 1;
+        extra_args_len = len * sizeof(WCHAR);
+        extra_args = malloc( extra_args_len );
+        ntdll_umbstowcs( wine_args, len, extra_args + 1, len );
+        extra_args[0] = L' ';
+        unsetenv( "WINEARGS" );
+    }
 
     size = (sizeof(*params)
             + MAX_PATH * sizeof(WCHAR)  /* curdir */
             + info->dllpath_len + sizeof(WCHAR)
             + info->imagepath_len + sizeof(WCHAR)
-            + info->cmdline_len + sizeof(WCHAR)
+            + info->cmdline_len + extra_args_len + sizeof(WCHAR)
             + info->title_len + sizeof(WCHAR)
             + info->desktop_len + sizeof(WCHAR)
             + info->shellinfo_len + sizeof(WCHAR)
@@ -2156,7 +2180,14 @@
 
     if (info->dllpath_len) copy_unicode_string( &src, &dst, &params->DllPath, info->dllpath_len );
     copy_unicode_string( &src, &dst, &params->ImagePathName, info->imagepath_len );
-    copy_unicode_string( &src, &dst, &params->CommandLine, info->cmdline_len );
+    if (extra_args && info->cmdline_len > 0) {
+        WCHAR *old = dst;
+        copy_unicode_string( &src, &dst, &params->CommandLine, info->cmdline_len );
+        dst = old + (info->cmdline_len / sizeof(WCHAR));
+        append_unicode_string( extra_args, &dst, &params->CommandLine );
+        free(extra_args);
+        extra_args = NULL;
+    } else copy_unicode_string( &src, &dst, &params->CommandLine, info->cmdline_len );
     copy_unicode_string( &src, &dst, &params->WindowTitle, info->title_len );
     copy_unicode_string( &src, &dst, &params->Desktop, info->desktop_len );
     copy_unicode_string( &src, &dst, &params->ShellInfo, info->shellinfo_len );
