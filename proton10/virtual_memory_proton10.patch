diff -urN proton10_wine/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
--- proton10_wine/dlls/ntdll/unix/virtual.c	2025-10-26 19:03:17.882767761 +0800
+++ b/dlls/ntdll/unix/virtual.c	2025-10-26 23:22:59.490787076 +0800
@@ -293,9 +293,9 @@
 static void *address_space_start = (void *)0x10000;
 #endif
 #ifdef _WIN64
-static void *address_space_limit = (void *)0x7fffffff0000;  /* top of the total available address space */
-static void *user_space_limit    = (void *)0x7fffffff0000;  /* top of the user address space */
-static void *working_set_limit   = (void *)0x7fffffff0000;  /* top of the current working set */
+static void *address_space_limit = (void *)0x7fffff0000;  /* top of the total available address space */
+static void *user_space_limit    = (void *)0x7fffff0000;  /* top of the user address space */
+static void *working_set_limit   = (void *)0x7fffff0000;  /* top of the current working set */
 #else
 static void *address_space_limit = (void *)0xc0000000;
 static void *user_space_limit    = (void *)0x7fff0000;
@@ -935,7 +935,7 @@
     /* if we don't have a preloader, try to reserve the space now */
     reserve_area( (void *)0x000000010000, (void *)0x000068000000 );
     reserve_area( (void *)0x00007f000000, (void *)0x00007fff0000 );
-    reserve_area( (void *)0x7ffffe000000, (void *)0x7fffffff0000 );
+    reserve_area( (void *)0x7ffffe000000, (void *)0x7fffff0000 );
 
 #endif
 }
@@ -2600,11 +2600,6 @@
             break;
         case EACCES:
         case EPERM:  /* noexec filesystem, fall back to read() */
-            if (flags & MAP_SHARED)
-            {
-                if (prot & PROT_EXEC) ERR( "failed to set PROT_EXEC on file map, noexec filesystem?\n" );
-                return STATUS_ACCESS_DENIED;
-            }
             if (prot & PROT_EXEC) WARN( "failed to set PROT_EXEC on file map, noexec filesystem?\n" );
             break;
         default:
diff -urN proton10_wine/loader/preloader.c b/loader/preloader.c
--- proton10_wine/loader/preloader.c	2025-10-26 19:03:19.759764511 +0800
+++ b/loader/preloader.c	2025-10-27 00:03:03.616624179 +0800
@@ -1487,7 +1487,7 @@
         {
             /* don't warn for low 64k */
             if (preload_info[i].addr >= (void *)0x10000
-#ifdef __aarch64__
+#ifdef 1
                 && preload_info[i].addr < (void *)0x7fffffffff /* ARM64 address space might end here*/
 #endif
             )
